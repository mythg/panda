package repl

import (
	"bufio"
	"fmt"
	"io"
	evaluator "panda/evaluator"
	"panda/lexer"
	"panda/parser"
)

const PROMPT = ">> "

const PANDA_FACE = `
################################################################################
####################      #######G           .########     #####################
##################L        D##      LW####Ki     ;##         ###################
##################              W##############L   ,          ##################
#################            G####################:           ##################
#################           ########################           #################
################          ############################         #################
################         K#############################         ################
################        ################################        ################
################       ,#################################       ################
################      .###################################      ################
################;     ####################################G    #################
#################    E#####################################:  t#################
##################   #######################################  ##################
##################G ########################################: ##################
##################  #########   ################,  :######### j#################
################## G#######E      #############     .########: #################
#################L ########       ############f       ######## #################
#################  #######     #. ############  ##    .####### .################
################# G#######    f#  ############: L#     #######  ################
################# #######         #############        D######  ################
################E #######        .#############        f######  ################
################j #######t       #####Wt,j######       #######. ################
################f ########      #####      #####K      #######  ################
################K #######WW.  G######W     #######   tWWW#####  ################
################# ######WWWKKWW########   ########WKWWWWK#####  ################
################# :#####KWWWWWWW######## #########WWWWWWW##### i################
#################  #####KWWWWWK###E ###   ### ####WWWWWWW##### #################
################## ;#####WKWWWK####K   ##W   #####WWWWWKW####  #################
##################  ######KWWK#####################WKWWW####L ##################
###################  #######################################  ##################
###################E :#####################################  ###################
####################, .###################################  ####################
#####################,  ################################W  #####################
######################W  ,#############################   ######################
########################   G#########################   E#######################
##########################    L##################W    K#########################
############################.     tK########Et      ############################
################################:               W###############################
################################################################################
`

func Start(in io.Reader, out io.Writer) {
	scanner := bufio.NewScanner(in)
	io.WriteString(out, PANDA_FACE)

	for {
		fmt.Fprintf(out, PROMPT)
		scanned := scanner.Scan()
		if !scanned {
			return
		}

		line := scanner.Text()
		l := lexer.New(line)
		p := parser.New(l)
		program := p.ParseProgram()
		if len(p.Errors()) != 0 {
			printParserErrors(out, p.Errors())
			continue
		}

		evaluator := evaluator.Eval(program)
		if evaluator != nil {
			io.WriteString(out, evaluator.Inspect())
			io.WriteString(out, "\n")
		}

		//for tok := l.NextToken(); tok.Type != token.EOF; tok = l.NextToken() {
		//	fmt.Fprintf(out, "%+v\n", tok)
		//}
	}
}

func printParserErrors(out io.Writer, errors []string) {
	io.WriteString(out, "Woops! we ran into some panda business here!\n")
	io.WriteString(out, " parser errors: \n")
	for _, msg := range errors {
		io.WriteString(out, "\t"+msg+"\n")
	}
}
